set -g default-terminal 'screen-256color'
set-option -g renumber-window on

# allow native scrollback
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Powerline statusbar
#source '/usr/share/tmux/powerline.conf'
source '/usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf'
#DESKTOP & CHROMEBOOK
#source '/usr/share/tmux/powerline.conf'
#source '/usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'
#LAPTOP
#source '/usr/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf'

# use | and - for spliting windows
# splits open in current directory, new windows open in ~
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-f

# Visit last window by pressing ctrl+f twice
bind-key C-f last-window

# Allow titles for windows and set them to user@host unless otherwise set
set -g set-titles on
set -g set-titles-string "#T"
set -g allow-rename off
 
# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key -n C-b send-prefix

#vim style pane selection
unbind-key j
bind-key j select-pane -D 

unbind-key k
bind-key k select-pane -U

unbind-key h
bind-key h select-pane -L

unbind-key l
bind-key l select-pane -R

# christoomey/vim-tmux-navigator
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#layout bindings
bind-key ! source-file ~/.tmux/main
bind-key @ source-file ~/.tmux/rails

#new window binding
#bind-key C-n new-window
